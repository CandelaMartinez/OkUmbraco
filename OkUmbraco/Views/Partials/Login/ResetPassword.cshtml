@inherits Umbraco.Web.Mvc.UmbracoViewPage<OkUmbraco.Core.ViewModel.ResetPasswordViewModel>
@using OkUmbraco.Core.Controllers
<!--establesco cual es mi view model-->


@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}

<!--succes?-->
<!--yes: thanks-->
@if (TempData["status"] != null && (string)TempData["status"] == "OK")
{


    <h3>Password changed</h3>


    <p>Your password was changed, please login now </p>


    <a href="/login">Go to login</a>
}
else
{

    <!--otherwise: show the form-->
    <div class="container">
        <div class="row">
            <div class="col">

                <!--HandleResetPassword method in LoginController-->
                @using (Html.BeginUmbracoForm<LoginController>("HandleResetPassword"))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary()

                    <fieldset>
                        <legend>Reset your password</legend>
                        <p>
                            Enter a new password.
                            Your password must be at least 10 characters and contain 1 number and 1 special character.
                        </p>
                        <div class="form-group">
                            <div class="editor-label">
                                @Html.LabelFor(m => m.Password)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(m => m.Password)
                                @Html.ValidationMessageFor(m => m.Password)
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="editor-label">
                                @Html.LabelFor(m => m.ConfirmPassword)
                            </div>
                            <div class="editor-field">
                                @Html.EditorFor(m => m.ConfirmPassword)
                                @Html.ValidationMessageFor(m => m.ConfirmPassword)
                            </div>
                        </div>

                        <div class="form-group">
                            <button type="submit" name="submit">Change password</button>
                        </div>
                    </fieldset>
                }

            </div>
        </div>
    </div>

}