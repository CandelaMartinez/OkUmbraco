@inherits Umbraco.Web.Mvc.UmbracoViewPage<OkUmbraco.Core.ViewModel.LoginViewModel>

@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();

    var myUser = System.Web.Security.Membership.GetUser();
}
<!--already logged in?-->
@if (Umbraco.MemberIsLoggedOn())
{
    <!--if yes: show log out-->
    if (myUser != null)
    {
        <p><strong>Logged in as</strong> @myUser.UserName</p>
        <a href="/logout" class="btn btn-danger">Log out</a> <i class="fa fa-arrow-right"></i>
    }
}
else
{
    <!--if not: show loging form-->
    <div class="container">
        <div class="row">
            <div class="col">
                @using (Html.BeginUmbracoForm<OkUmbraco.Core.Controllers.LoginController>("HandleLogin"))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary()

                    <div class="form-group">
                        @Html.LabelFor(m => m.Username)
                        @Html.TextBoxFor(m => m.Username, new
                        {
                            placeholder = "Username"
                        })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Password)
                        @Html.PasswordFor(m => m.Password, new
                        {
                            placeholder = "Password"
                        })
                    </div>

                    //post back the redirect url
                    @Html.HiddenFor(m =>m.RedirectUrl)
                    <button name="login" type="submit">Login</button>
                }
            </div>
        </div>
        <div class="row">
            <div class="col">
                <a href="/forgotten-password/">Forgotten password?</a> |
                <a href="/register/">Register</a>
            </div>
        </div>
    </div>
}

